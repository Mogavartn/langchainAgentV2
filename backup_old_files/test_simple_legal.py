#!/usr/bin/env python3
"""
Test simplifi√© de d√©tection des demandes de r√©cup√©ration d'argent CPF
Teste uniquement la logique de d√©tection des mots-cl√©s
"""

# D√©finition simplifi√©e des mots-cl√©s l√©gaux (copi√©e de process.py)
legal_keywords = frozenset([
    "d√©caisser le cpf", "r√©cup√©rer mon argent", "r√©cup√©rer l'argent", 
    "prendre l'argent", "argent du cpf", "sortir l'argent",
    "avoir mon argent", "toucher l'argent", "retirer l'argent",
    "frauder", "arnaquer", "contourner", "bidouiller",
    "r√©cup√©rer cpf", "prendre cpf", "d√©caisser cpf",
    # NOUVELLES VARIANTES POUR CAPTURER TOUTES LES DEMANDES DE R√âCUP√âRATION
    "je veux l'argent", "je veux r√©cup√©rer", "je veux prendre",
    "je veux l'argent de mon cpf", "je veux r√©cup√©rer mon argent",
    "je veux prendre l'argent", "je veux l'argent du cpf",
    "je veux r√©cup√©rer l'argent", "je veux prendre l'argent",
    "r√©cup√©rer mon argent de mon cpf", "prendre mon argent de mon cpf",
    "r√©cup√©rer l'argent de mon cpf", "prendre l'argent de mon cpf",
    "r√©cup√©rer mon argent du cpf", "prendre mon argent du cpf",
    "r√©cup√©rer l'argent du cpf", "prendre l'argent du cpf",
    "argent de mon cpf", "argent du cpf pour moi",
    "r√©cup√©ration argent cpf", "prise argent cpf",
    "r√©mun√©ration pour sois-m√™me", "r√©mun√©ration pour moi",
    "r√©cup√©ration pour sois-m√™me", "r√©cup√©ration pour moi",
    "prendre pour sois-m√™me", "prendre pour moi",
    "argent cpf pour moi", "argent cpf pour sois-m√™me"
])

def has_legal_keywords(message: str) -> bool:
    """V√©rifie si un message contient des mots-cl√©s l√©gaux"""
    message_lower = message.lower()
    return any(keyword in message_lower for keyword in legal_keywords)

def test_legal_detection():
    """Test de d√©tection des demandes l√©gales"""
    
    # Liste des messages de test pour r√©cup√©ration d'argent CPF
    test_messages = [
        # Messages de la conversation fournie
        "Comment je r√©cup√®re mon argent de mon CPF ?",
        "je veux l'argent de mon cpf",
        "je veux prendre l'argent de mon cpf",
        
        # Nouvelles variantes ajout√©es
        "je veux r√©cup√©rer mon argent",
        "je veux prendre l'argent",
        "je veux l'argent du cpf",
        "r√©cup√©rer mon argent de mon cpf",
        "prendre mon argent de mon cpf",
        "r√©cup√©rer l'argent de mon cpf",
        "prendre l'argent de mon cpf",
        "argent de mon cpf",
        "argent du cpf pour moi",
        "r√©cup√©ration argent cpf",
        "prise argent cpf",
        "r√©mun√©ration pour sois-m√™me",
        "r√©mun√©ration pour moi",
        "r√©cup√©ration pour sois-m√™me",
        "prendre pour sois-m√™me",
        "argent cpf pour moi",
        
        # Variantes avec diff√©rentes formulations
        "comment r√©cup√©rer l'argent de mon cpf",
        "comment prendre l'argent de mon cpf",
        "je souhaite r√©cup√©rer mon argent cpf",
        "je souhaite prendre l'argent cpf",
        "donnez-moi l'argent de mon cpf",
        "je veux toucher l'argent de mon cpf",
        "je veux avoir l'argent de mon cpf",
        "je veux sortir l'argent de mon cpf",
        "je veux retirer l'argent de mon cpf",
        
        # Messages qui ne devraient PAS d√©clencher le bloc l√©gal
        "comment devenir ambassadeur",
        "formation cpf disponible",
        "paiement formation",
        "d√©lai paiement",
        "contact humain"
    ]
    
    print("üß™ TEST DE D√âTECTION DES DEMANDES DE R√âCUP√âRATION D'ARGENT CPF")
    print("=" * 70)
    
    legal_detected = 0
    total_tests = len(test_messages)
    
    for i, message in enumerate(test_messages, 1):
        is_legal = has_legal_keywords(message)
        
        # D√©terminer si c'est attendu ou non
        expected_legal = i <= 28  # Les 28 premiers messages devraient √™tre d√©tect√©s comme l√©gaux
        
        status = "‚úÖ LEGAL" if is_legal else "‚ùå AUTRE"
        expected = "‚úÖ ATTENDU" if expected_legal else "‚ùå NON ATTENDU"
        
        print(f"{i:2d}. {status} | {expected} | '{message}'")
        
        if is_legal:
            legal_detected += 1
        
        # V√©rifier la coh√©rence
        if expected_legal and not is_legal:
            print(f"    ‚ö†Ô∏è  PROBL√àME: Devrait √™tre d√©tect√© comme l√©gal mais ne l'est pas!")
        elif not expected_legal and is_legal:
            print(f"    ‚ö†Ô∏è  PROBL√àME: D√©tect√© comme l√©gal mais ne devrait pas l'√™tre!")
    
    print("\n" + "=" * 70)
    print(f"üìä R√âSULTATS:")
    print(f"   - D√©tections l√©gales: {legal_detected}/{total_tests}")
    print(f"   - Taux de d√©tection: {(legal_detected/total_tests)*100:.1f}%")
    print(f"   - Messages attendus comme l√©gaux: 28")
    print(f"   - Messages d√©tect√©s comme l√©gaux: {legal_detected}")
    
    # Test sp√©cifique des mots-cl√©s
    print(f"\nüîç TEST DES MOTS-CL√âS L√âGAUX:")
    print(f"   - Nombre de mots-cl√©s l√©gaux: {len(legal_keywords)}")
    
    # Afficher quelques mots-cl√©s pour v√©rification
    print(f"   - Exemples de mots-cl√©s:")
    for keyword in list(legal_keywords)[:15]:
        print(f"     ‚Ä¢ {keyword}")
    if len(legal_keywords) > 15:
        print(f"     ‚Ä¢ ... et {len(legal_keywords) - 15} autres")
    
    # Test sp√©cifique des messages de la conversation
    print(f"\nüéØ TEST DES MESSAGES DE LA CONVERSATION:")
    conversation_messages = [
        "Comment je r√©cup√®re mon argent de mon CPF ?",
        "je veux l'argent de mon cpf",
        "je veux prendre l'argent de mon cpf"
    ]
    
    for msg in conversation_messages:
        detected = has_legal_keywords(msg)
        print(f"   - '{msg}' ‚Üí {'‚úÖ D√âTECT√â' if detected else '‚ùå NON D√âTECT√â'}")

if __name__ == "__main__":
    test_legal_detection()